pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'b5804654-7184-42e2-ae01-e5d29fcdbb92', url: 'https://github.com/munshyn/SC_Assignment2.git']])
            }
        }

        stage('Build Docker Image') {
            steps {
                bat 'docker build -t opspanzu .'
            }
        }

        stage('Push Docker Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker'){

                    bat 'docker tag opspanzu:latest husnymusharraf/opspanzu:latest'
                    bat 'docker push husnymusharraf/opspanzu:latest'
                    
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig(caCertificate: 'C:\\Users\\Lenovo\\.minikube\\ca.crt', clusterName: 'kubernetes-dashboard', contextName: '', credentialsId: 'kubernetes', namespace: 'kubernetes-dashboard', restrictKubeConfigAccess: false, serverUrl: 'http://127.0.0.1:60507/') {
                    bat 'kubectl apply -f deployment.yaml'

                    bat 'kubectl get deployment'

                    bat 'kubectl apply -f service.yaml'

                    bat 'kubectl get services'
                }
            }
        }
    }
}
